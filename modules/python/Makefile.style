FLAKE8=$(call which,flake8)
AUTOFLAKE=$(call which,autoflake)

AUTOFLAKE_OUTPUT:=reports/python.autoflake
FLAKE8_OUTPUT:=reports/python.flake8

ISORT_FLAGS:=--profile black
AUTOFLAKE_FLAGS:=--remove-unused-variables --remove-all-unused-imports --ignore-init-module-imports
FLAKE8_FLAGS:=--select=B,C,E,F,W,T4,B9 --ignore=E203,E231,E266,E501,W503 --output-file=$(FLAKE8_OUTPUT) --tee --exit-zero
# E203: https://github.com/psf/black/issues/315
# W503: https://github.com/psf/black/pull/36
# E501: Let black handle line length

PYTHON_LINT_TARGETS?=$(shell find . $(PYTHON_TARGETS_FIND_FLAGS))

.PHONY: python/lint/targets
python/lint/targets:
	@VAR=( $(PYTHON_LINT_TARGETS) ); echo "Discovered $${#VAR[@]} files:"
	@echo "$$(echo $(PYTHON_LINT_TARGETS) | tr ' ' '\n')"

.PHONY: python/lint/announce/%
python/lint/announce/%:
	@VAR=( $(PYTHON_LINT_TARGETS) ); echo "Checking $${#VAR[@]} files with $*..."

.PHONY: python/lint
## Check python files using black
python/lint: bh/venv reports/
	@$(MAKE) python/lint/targets python/isort/check python/black/check python/flake8 python/autoflake/check
	@echo "Done."

.PHONY: python/autoflake/check
## Check python imports ordering using autoflake
python/autoflake/check: bh/venv
	$(call assert-set,AUTOFLAKE)
	@$(MAKE) python/lint/announce/autoflake
	@$(AUTOFLAKE) $(AUTOFLAKE_FLAGS) $(PYTHON_LINT_TARGETS) >| $(AUTOFLAKE_OUTPUT) && ([ ! -s $(AUTOFLAKE_OUTPUT) ] || cat $(AUTOFLAKE_OUTPUT))

.PHONY: python/autoflake
## Fix python imports ordering using autoflake
python/autoflake: bh/venv
	$(call assert-set,AUTOFLAKE)
	$(AUTOFLAKE) $(AUTOFLAKE_FLAGS) --in-place $(PYTHON_LINT_TARGETS)

.PHONY: python/isort/check
## Check python imports using isort
python/isort/check:
	@$(DOCKER) pull -q alphachai/isort
	@$(MAKE) python/lint/announce/isort
	@$(DOCKER) run -it --rm --user $$(id -u):$$(id -g) --mount type=bind,src=$$(pwd),dst=/app alphachai/isort $(ISORT_FLAGS) --check-only $(PYTHON_LINT_TARGETS) --diff

.PHONY: python/isort
## Fix python imports using isort
python/isort:
	@$(DOCKER) pull -q alphachai/isort
	$(DOCKER) run -it --rm --user $$(id -u):$$(id -g) --mount type=bind,src=$$(pwd),dst=/app alphachai/isort $(ISORT_FLAGS) $(PYTHON_LINT_TARGETS)

.PHONY: python/black/check
## Check python files using black
python/black/check:
	@$(DOCKER) pull -q alphachai/black
	@$(MAKE) python/lint/announce/black
	@$(DOCKER) run -it --rm --user $$(id -u):$$(id -g) --mount type=bind,src=$$(pwd),dst=/app alphachai/black --check $(PYTHON_LINT_TARGETS)

.PHONY: python/black
## Reformat python files using black
python/black:
	@$(DOCKER) pull -q alphachai/black
	$(DOCKER) run -it --rm --user $$(id -u):$$(id -g) --mount type=bind,src=$$(pwd),dst=/app alphachai/black $(PYTHON_LINT_TARGETS)

.PHONY: python/flake8
## Check python style against pep8 using flake8
python/flake8: bh/venv
	$(call assert-set,FLAKE8)
	@$(MAKE) python/lint/announce/flake8
	@$(FLAKE8) $(FLAKE8_FLAGS) $(PYTHON_LINT_TARGETS)

.PHONY: python/fmt
## Format python files
python/fmt: bh/venv
	@$(MAKE) python/isort python/black python/autoflake
