BUILD_HARNESS_REQ_TEMPLATE:=$(BUILD_HARNESS_PATH)/requirements.template
BUILD_HARNESS_REQ_NAME:=.build-harness.requirements.txt
BUILD_HARNESS_REQ:=$(CURDIR)/$(BUILD_HARNESS_REQ_NAME)
BUILD_HARNESS_PIPFILE_NAME:=.build-harness.Pipfile
BUILD_HARNESS_PIPFILE:=$(CURDIR)/$(BUILD_HARNESS_PIPFILE_NAME)
BUILD_HARNESS_VENV_NAME:=.build-harness.venv
BUILD_HARNESS_VENV:=$(CURDIR)/$(BUILD_HARNESS_VENV_NAME)
WITH_BH_VENV=$(shell test -f $(BUILD_HARNESS_REQ) && echo "source $(BUILD_HARNESS_VENV)/bin/activate 2>/dev/null &&")

define which
$(shell $(WITH_BH_VENV) which $1 2>/dev/null)
endef

.PHONY: bh/venv/debug
bh/venv/debug:
	$(call print-var,VENV_MODULE)
	$(call print-var,BUMPVERSION)
	$(call print-var,BLACK)
	$(call print-var,ISORT)

.PHONY: bh/venv
bh/venv: $(BUILD_HARNESS_VENV)

$(BUILD_HARNESS_REQ_TEMPLATE):
	@echo "[build-harness] MISSING: $@"

$(BUILD_HARNESS_REQ): $(BUILD_HARNESS_REQ_TEMPLATE)
	@if [ -f $@ ]; then echo "Removing previously generated build-harness requirements" && rm $@; fi
	@cat $(BUILD_HARNESS_REQ_TEMPLATE) | xargs -I % bash -c 'if [ -z "$$(which % 2>/dev/null)" ]; then echo "% not found" && echo "%" >> $@; fi'

$(BUILD_HARNESS_PIPFILE): $(BUILD_HARNESS_REQ)
	@if [ -f $@ ]; then echo "Removing previously generated build-harness Pipfile" && rm $@; fi
	@if [ -n "$$(which pipenv 2>/dev/null)" ]; then \
		echo "[packages]" >> $@; \
		cat $(BUILD_HARNESS_REQ) | xargs -I % bash -c 'if [ -z "$$(which % 2>/dev/null)" ]; then echo "% = \"*\"" >> $@; fi'; \
	fi

$(BUILD_HARNESS_VENV): $(BUILD_HARNESS_REQ) $(BUILD_HARNESS_PIPFILE)
	@if [ -s $(BUILD_HARNESS_REQ) ]; then echo "Installing: $$(cat $(BUILD_HARNESS_REQ) | tr '\n' ' ')"; fi
	@if [ -n "$$(which pipenv 2>/dev/null)" ]; then \
		echo "Installing build-harness requirements with pipenv..."; \
		( \
			$(shell if [ $$(python -c 'import platform; ver=int(platform.python_version()[0]); print(ver)' 2>/dev/null) -eq 2 ] && [ -n "$$(which python3 2>/dev/null)" ]; then echo "python3"; else echo "python"; fi) -m venv $@ \
			&& source $@/bin/activate && pip install -r <(PIPENV_PIPFILE=$(BUILD_HARNESS_PIPFILE) PIPENV_QUIET=1 pipenv --bare lock -r --pre) --ignore-installed \
		); if [ $$? -ne 0 ]; then rm -rf $@; fi; \
	else \
		echo "WARNING: Installing build-harness requirements with venv + pip because pipenv was not installed..."; \
		( \
			$(shell if [ $$(python -c 'import platform; ver=int(platform.python_version()[0]); print(ver)' 2>/dev/null) -eq 2 ] && [ -n "$$(which python3 2>/dev/null)" ]; then echo "python3"; else echo "python"; fi) -m venv $@ \
			&& source $@/bin/activate && pip install -r $(BUILD_HARNESS_REQ) --ignore-installed \
		); if [ $$? -ne 0 ]; then rm -rf $@; fi; \
	fi
